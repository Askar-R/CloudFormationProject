AWSTemplateFormatVersion: 2010-09-09
Description: Academy Demo CloudFormation
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
    Description: Enter t2.micro. Default is t2.micro.
  LatestAmiId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

Resources:
  razanBucket:
    Type: AWS::S3::Bucket
  RazanQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 30

  RazanEc2:
    Type: "AWS::EC2::Instance"
    Properties:
      SecurityGroups:
        - !Ref SecurityGroupEC2
      AvailabilityZone: us-east-1a
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceTypeParameter

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt SecurityGroupALB.GroupId
      Scheme: internet-facing
      Subnets:
        - "subnet-05dc5323a90701745"

        - "subnet-0462080141c44392d"

        - "subnet-0441c0b1c024fa494"

        - "subnet-0e8cecdb378d728af"

        - "subnet-0e2ac274cda7f0de0"

        - "subnet-011535b5492b30052"
      Tags:
        - Key: Name
          Value: RazanALB

  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: RazanSecurityEC2
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: RazanSecurityEC2

  SecurityGroupALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: "200"
      Name: RazanEC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "20"
      Targets:
        - Id: !Ref RazanEc2
          Port: 80
      UnhealthyThresholdCount: 3
      VpcId: vpc-02f0416e2af96dc4e

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  MyLoadBalancerDNSName:
    Description: The DNSName of the backup load balancer
    Value: !GetAtt MyLoadBalancer.DNSName
